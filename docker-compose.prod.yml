version: '3.8'
services:
  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      # - minio  # Uncomment if using MinIO
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://prod_user:prod_password@postgres:5432/prod_db
      - REDIS_URL=redis://redis:6379
      - PORT=3000
      - JWT_ACCESS_SECRET=${JWT_ACCESS_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - ACCESS_TOKEN_TTL=15m
      - REFRESH_TOKEN_TTL=7d
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_REGION=${S3_REGION}
      - S3_BUCKET=${S3_BUCKET}
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=prod_db
      - POSTGRES_USER=prod_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - redis_prod_data:/data
    restart: unless-stopped

  # Optional MinIO for S3-compatible storage
  # minio:
  #   image: minio/minio
  #   command: server /data --console-address ":9001"
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     - MINIO_ROOT_USER=${MINIO_ROOT_USER}
  #     - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
  #   volumes:
  #     - minio_data:/data
  #   restart: unless-stopped

volumes:
  postgres_prod_data:
  redis_prod_data:
  # minio_data: