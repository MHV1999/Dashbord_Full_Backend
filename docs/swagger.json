{
  "openapi": "3.0.0",
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              },
              "example": {
                "email": "admin@example.com",
                "password": "admin123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "expiresIn": 900
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "summary": "Refresh access token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Token refreshed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                },
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "expiresIn": 900
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "refresh_token": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "summary": "Logout user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Logged out"
          }
        },
        "tags": [
          "auth"
        ],
        "security": [
          {
            "refresh_token": []
          }
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_me",
        "summary": "Get current user info",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User info",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "user_id_here"
                    },
                    "email": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UsersController_findAll",
        "summary": "Get all users with pagination",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "pageSize",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "user1" },
                      "email": { "type": "string", "example": "user1@example.com" },
                      "name": { "type": "string", "example": "User One" },
                      "status": { "type": "string", "example": "active" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "user1",
                    "email": "user1@example.com",
                    "name": "User One",
                    "status": "active"
                  },
                  {
                    "id": "user2",
                    "email": "user2@example.com",
                    "name": "User Two",
                    "status": "inactive"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UsersController_findOne",
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "user1" },
                    "email": { "type": "string", "example": "user1@example.com" },
                    "name": { "type": "string", "example": "User One" }
                  }
                },
                "example": {
                  "id": "user1",
                  "email": "user1@example.com",
                  "name": "User One"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "UsersController_update",
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              },
              "example": {
                "email": "user@example.com",
                "name": "John Doe",
                "password": "newpassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "user1" },
                    "email": { "type": "string", "example": "updated@example.com" },
                    "name": { "type": "string", "example": "Updated Name" }
                  }
                },
                "example": {
                  "id": "user1",
                  "email": "updated@example.com",
                  "name": "Updated Name"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "Delete user (admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/users/{id}/permissions": {
      "get": {
        "operationId": "UsersController_getPermissions",
        "summary": "Get user permissions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "perm1" },
                      "name": { "type": "string", "example": "read" },
                      "description": { "type": "string", "example": "Read access" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "perm1",
                    "name": "read",
                    "description": "Read access"
                  },
                  {
                    "id": "perm2",
                    "name": "write",
                    "description": "Write access"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        },
        "tags": [
          "users"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/roles": {
      "post": {
        "operationId": "RolesController_create",
        "summary": "Create role",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              },
              "example": {
                "name": "admin",
                "description": "Administrator role"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Role created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "role1" },
                    "name": { "type": "string", "example": "admin" },
                    "description": { "type": "string", "example": "Administrator role" }
                  }
                },
                "example": {
                  "id": "role1",
                  "name": "admin",
                  "description": "Administrator role"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "RolesController_findAll",
        "summary": "Get all roles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "role1" },
                      "name": { "type": "string", "example": "admin" },
                      "description": { "type": "string", "example": "Administrator role" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "role1",
                    "name": "admin",
                    "description": "Administrator role"
                  },
                  {
                    "id": "role2",
                    "name": "user",
                    "description": "Standard user role"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "RolesController_findOne",
        "summary": "Get role by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "role1" },
                    "name": { "type": "string", "example": "admin" },
                    "description": { "type": "string", "example": "Administrator role" }
                  }
                },
                "example": {
                  "id": "role1",
                  "name": "admin",
                  "description": "Administrator role"
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        },
        "tags": [
          "roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "RolesController_update",
        "summary": "Update role",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoleDto"
              },
              "example": {
                "name": "admin",
                "description": "Administrator role"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "role1" },
                    "name": { "type": "string", "example": "admin" },
                    "description": { "type": "string", "example": "Administrator role" }
                  }
                },
                "example": {
                  "id": "role1",
                  "name": "admin",
                  "description": "Administrator role"
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        },
        "tags": [
          "roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "RolesController_remove",
        "summary": "Delete role",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "tags": [
          "roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/roles/{roleId}/assign": {
      "post": {
        "operationId": "RolesController_assign",
        "summary": "Assign role to user",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRoleDto"
              },
              "example": {
                "userId": "user_id_123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Role assigned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Role assigned successfully" }
                  }
                },
                "example": {
                  "message": "Role assigned successfully"
                }
              }
            }
          }
        },
        "tags": [
          "roles"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/permissions": {
      "post": {
        "operationId": "PermissionsController_create",
        "summary": "Create permission",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionDto"
              },
              "example": {
                "name": "read",
                "description": "Read access"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Permission created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "perm1" },
                    "name": { "type": "string", "example": "read" },
                    "description": { "type": "string", "example": "Read access" }
                  }
                },
                "example": {
                  "id": "perm1",
                  "name": "read",
                  "description": "Read access"
                }
              }
            }
          }
        },
        "tags": [
          "permissions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "PermissionsController_findAll",
        "summary": "Get all permissions",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "perm1" },
                      "name": { "type": "string", "example": "read" },
                      "description": { "type": "string", "example": "Read access" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "perm1",
                    "name": "read",
                    "description": "Read access"
                  },
                  {
                    "id": "perm2",
                    "name": "write",
                    "description": "Write access"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "permissions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/permissions/{id}": {
      "get": {
        "operationId": "PermissionsController_findOne",
        "summary": "Get permission by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "perm1" },
                    "name": { "type": "string", "example": "read" },
                    "description": { "type": "string", "example": "Read access" }
                  }
                },
                "example": {
                  "id": "perm1",
                  "name": "read",
                  "description": "Read access"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found"
          }
        },
        "tags": [
          "permissions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "PermissionsController_update",
        "summary": "Update permission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionDto"
              },
              "example": {
                "name": "read",
                "description": "Read access"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Permission updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "perm1" },
                    "name": { "type": "string", "example": "read" },
                    "description": { "type": "string", "example": "Read access" }
                  }
                },
                "example": {
                  "id": "perm1",
                  "name": "read",
                  "description": "Read access"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found"
          }
        },
        "tags": [
          "permissions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "PermissionsController_remove",
        "summary": "Delete permission",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Permission deleted"
          },
          "404": {
            "description": "Permission not found"
          }
        },
        "tags": [
          "permissions"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/projects": {
      "post": {
        "operationId": "ProjectsController_create",
        "summary": "Create project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              },
              "example": {
                "name": "My Project",
                "description": "A sample project",
                "organizationId": "org_id_123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "project1" },
                    "name": { "type": "string", "example": "My Project" },
                    "description": { "type": "string", "example": "A sample project" },
                    "organizationId": { "type": "string", "example": "org_id_123" },
                    "ownerId": { "type": "string", "example": "user1" }
                  }
                },
                "example": {
                  "id": "project1",
                  "name": "My Project",
                  "description": "A sample project",
                  "organizationId": "org_id_123",
                  "ownerId": "user1"
                }
              }
            }
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ProjectsController_findAll",
        "summary": "Get all projects",
        "parameters": [
          {
            "name": "orgId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "project1" },
                      "name": { "type": "string", "example": "My Project" },
                      "description": { "type": "string", "example": "A sample project" },
                      "organizationId": { "type": "string", "example": "org_id_123" },
                      "ownerId": { "type": "string", "example": "user1" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "project1",
                    "name": "My Project",
                    "description": "A sample project",
                    "organizationId": "org_id_123",
                    "ownerId": "user1"
                  },
                  {
                    "id": "project2",
                    "name": "Another Project",
                    "description": "Another sample project",
                    "organizationId": "org_id_456",
                    "ownerId": "user2"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/projects/{id}": {
      "get": {
        "operationId": "ProjectsController_findOne",
        "summary": "Get project by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "project1" },
                    "name": { "type": "string", "example": "My Project" },
                    "description": { "type": "string", "example": "A sample project" },
                    "organizationId": { "type": "string", "example": "org_id_123" },
                    "ownerId": { "type": "string", "example": "user1" }
                  }
                },
                "example": {
                  "id": "project1",
                  "name": "My Project",
                  "description": "A sample project",
                  "organizationId": "org_id_123",
                  "ownerId": "user1"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "ProjectsController_update",
        "summary": "Update project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProjectDto"
              },
              "example": {
                "name": "Updated Project",
                "description": "Updated description"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "project1" },
                    "name": { "type": "string", "example": "Updated Project" },
                    "description": { "type": "string", "example": "Updated description" },
                    "organizationId": { "type": "string", "example": "org_id_123" },
                    "ownerId": { "type": "string", "example": "user1" }
                  }
                },
                "example": {
                  "id": "project1",
                  "name": "Updated Project",
                  "description": "Updated description",
                  "organizationId": "org_id_123",
                  "ownerId": "user1"
                }
              }
            }
          },
          "404": {
            "description": "Project not found"
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ProjectsController_remove",
        "summary": "Delete project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project deleted"
          },
          "404": {
            "description": "Project not found"
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/projects/{id}/members": {
      "post": {
        "operationId": "ProjectsController_addMember",
        "summary": "Add member to project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddMemberDto"
              },
              "example": {
                "userId": "user_id_123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Member added successfully" }
                  }
                },
                "example": {
                  "message": "Member added successfully"
                }
              }
            }
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/projects/{id}/members/{userId}": {
      "delete": {
        "operationId": "ProjectsController_removeMember",
        "summary": "Remove member from project",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Member removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Member removed successfully" }
                  }
                },
                "example": {
                  "message": "Member removed successfully"
                }
              }
            }
          }
        },
        "tags": [
          "projects"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/boards": {
      "post": {
        "operationId": "BoardsController_create",
        "summary": "Create board",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardDto"
              },
              "example": {
                "name": "My Board",
                "projectId": "project_id_123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Board created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "board1" },
                    "name": { "type": "string", "example": "My Board" },
                    "projectId": { "type": "string", "example": "project_id_123" }
                  }
                },
                "example": {
                  "id": "board1",
                  "name": "My Board",
                  "projectId": "project_id_123"
                }
              }
            }
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "BoardsController_findAll",
        "summary": "Get all boards",
        "parameters": [
          {
            "name": "projectId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of boards",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "board1" },
                      "name": { "type": "string", "example": "My Board" },
                      "projectId": { "type": "string", "example": "project_id_123" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "board1",
                    "name": "My Board",
                    "projectId": "project_id_123"
                  },
                  {
                    "id": "board2",
                    "name": "Another Board",
                    "projectId": "project_id_456"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/boards/{id}": {
      "get": {
        "operationId": "BoardsController_findOne",
        "summary": "Get board by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "board1" },
                    "name": { "type": "string", "example": "My Board" },
                    "projectId": { "type": "string", "example": "project_id_123" }
                  }
                },
                "example": {
                  "id": "board1",
                  "name": "My Board",
                  "projectId": "project_id_123"
                }
              }
            }
          },
          "404": {
            "description": "Board not found"
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "BoardsController_update",
        "summary": "Update board",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBoardDto"
              },
              "example": {
                "name": "Updated Board"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Board updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "board1" },
                    "name": { "type": "string", "example": "Updated Board" },
                    "projectId": { "type": "string", "example": "project_id_123" }
                  }
                },
                "example": {
                  "id": "board1",
                  "name": "Updated Board",
                  "projectId": "project_id_123"
                }
              }
            }
          },
          "404": {
            "description": "Board not found"
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "BoardsController_remove",
        "summary": "Delete board",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Board deleted"
          },
          "404": {
            "description": "Board not found"
          }
        },
        "tags": [
          "boards"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/lists": {
      "post": {
        "operationId": "ListsController_create",
        "summary": "Create list",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateListDto"
              },
              "example": {
                "name": "To Do",
                "boardId": "board_id_123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "List created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "list1" },
                    "name": { "type": "string", "example": "To Do" },
                    "boardId": { "type": "string", "example": "board_id_123" },
                    "position": { "type": "integer", "example": 1 }
                  }
                },
                "example": {
                  "id": "list1",
                  "name": "To Do",
                  "boardId": "board_id_123",
                  "position": 1
                }
              }
            }
          }
        },
        "tags": [
          "lists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ListsController_findAll",
        "summary": "Get all lists",
        "parameters": [
          {
            "name": "boardId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of lists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "list1" },
                      "name": { "type": "string", "example": "To Do" },
                      "boardId": { "type": "string", "example": "board_id_123" },
                      "position": { "type": "integer", "example": 1 }
                    }
                  }
                },
                "example": [
                  {
                    "id": "list1",
                    "name": "To Do",
                    "boardId": "board_id_123",
                    "position": 1
                  },
                  {
                    "id": "list2",
                    "name": "In Progress",
                    "boardId": "board_id_123",
                    "position": 2
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "lists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/lists/{id}": {
      "get": {
        "operationId": "ListsController_findOne",
        "summary": "Get list by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "list1" },
                    "name": { "type": "string", "example": "To Do" },
                    "boardId": { "type": "string", "example": "board_id_123" },
                    "position": { "type": "integer", "example": 1 }
                  }
                },
                "example": {
                  "id": "list1",
                  "name": "To Do",
                  "boardId": "board_id_123",
                  "position": 1
                }
              }
            }
          },
          "404": {
            "description": "List not found"
          }
        },
        "tags": [
          "lists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "ListsController_update",
        "summary": "Update list",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateListDto"
              },
              "example": {
                "name": "In Progress"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "list1" },
                    "name": { "type": "string", "example": "In Progress" },
                    "boardId": { "type": "string", "example": "board_id_123" },
                    "position": { "type": "integer", "example": 2 }
                  }
                },
                "example": {
                  "id": "list1",
                  "name": "In Progress",
                  "boardId": "board_id_123",
                  "position": 2
                }
              }
            }
          },
          "404": {
            "description": "List not found"
          }
        },
        "tags": [
          "lists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ListsController_remove",
        "summary": "Delete list",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List deleted"
          },
          "404": {
            "description": "List not found"
          }
        },
        "tags": [
          "lists"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/projects/{projectId}/issues": {
      "post": {
        "operationId": "IssuesController_create",
        "summary": "Create issue",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateIssueDto"
              },
              "example": {
                "title": "Fix bug",
                "description": "Description of the issue",
                "assigneeId": "user_id_123",
                "listId": "list_id_123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issue created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "issue1" },
                    "title": { "type": "string", "example": "Fix bug" },
                    "description": { "type": "string", "example": "Description of the issue" },
                    "listId": { "type": "string", "example": "list_id_123" },
                    "assigneeId": { "type": "string", "example": "user_id_123" },
                    "position": { "type": "integer", "example": 1 }
                  }
                },
                "example": {
                  "id": "issue1",
                  "title": "Fix bug",
                  "description": "Description of the issue",
                  "listId": "list_id_123",
                  "assigneeId": "user_id_123",
                  "position": 1
                }
              }
            }
          }
        },
        "tags": [
          "issues"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "IssuesController_findAll",
        "summary": "Get all issues in project",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "assigneeId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of issues",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "issue1" },
                      "title": { "type": "string", "example": "Fix bug" },
                      "description": { "type": "string", "example": "Description of the issue" },
                      "listId": { "type": "string", "example": "list_id_123" },
                      "assigneeId": { "type": "string", "example": "user_id_123" },
                      "position": { "type": "integer", "example": 1 }
                    }
                  }
                },
                "example": [
                  {
                    "id": "issue1",
                    "title": "Fix bug",
                    "description": "Description of the issue",
                    "listId": "list_id_123",
                    "assigneeId": "user_id_123",
                    "position": 1
                  },
                  {
                    "id": "issue2",
                    "title": "Add feature",
                    "description": "Description of the feature",
                    "listId": "list_id_456",
                    "assigneeId": "user_id_456",
                    "position": 2
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "issues"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/projects/{projectId}/issues/{id}": {
      "get": {
        "operationId": "IssuesController_findOne",
        "summary": "Get issue by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "issue1" },
                    "title": { "type": "string", "example": "Fix bug" },
                    "description": { "type": "string", "example": "Description of the issue" },
                    "listId": { "type": "string", "example": "list_id_123" },
                    "assigneeId": { "type": "string", "example": "user_id_123" },
                    "position": { "type": "integer", "example": 1 }
                  }
                },
                "example": {
                  "id": "issue1",
                  "title": "Fix bug",
                  "description": "Description of the issue",
                  "listId": "list_id_123",
                  "assigneeId": "user_id_123",
                  "position": 1
                }
              }
            }
          },
          "404": {
            "description": "Issue not found"
          }
        },
        "tags": [
          "issues"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "patch": {
        "operationId": "IssuesController_update",
        "summary": "Update issue",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateIssueDto"
              },
              "example": {
                "title": "Updated title",
                "description": "Updated description",
                "assigneeId": "user_id_456"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Issue updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "issue1" },
                    "title": { "type": "string", "example": "Updated title" },
                    "description": { "type": "string", "example": "Updated description" },
                    "listId": { "type": "string", "example": "list_id_123" },
                    "assigneeId": { "type": "string", "example": "user_id_456" },
                    "position": { "type": "integer", "example": 1 }
                  }
                },
                "example": {
                  "id": "issue1",
                  "title": "Updated title",
                  "description": "Updated description",
                  "listId": "list_id_123",
                  "assigneeId": "user_id_456",
                  "position": 1
                }
              }
            }
          },
          "404": {
            "description": "Issue not found"
          }
        },
        "tags": [
          "issues"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "IssuesController_remove",
        "summary": "Delete issue",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue deleted"
          },
          "404": {
            "description": "Issue not found"
          }
        },
        "tags": [
          "issues"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/issues/{issueId}/comments": {
      "post": {
        "operationId": "CommentsController_create",
        "summary": "Create comment",
        "parameters": [
          {
            "name": "issueId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentDto"
              },
              "example": {
                "content": "This is a comment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "comment1" },
                    "content": { "type": "string", "example": "This is a comment" },
                    "issueId": { "type": "string", "example": "issue_id_123" },
                    "userId": { "type": "string", "example": "user_id_123" }
                  }
                },
                "example": {
                  "id": "comment1",
                  "content": "This is a comment",
                  "issueId": "issue_id_123",
                  "userId": "user_id_123"
                }
              }
            }
          }
        },
        "tags": [
          "comments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "CommentsController_findAll",
        "summary": "Get all comments for issue",
        "parameters": [
          {
            "name": "issueId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "comment1" },
                      "content": { "type": "string", "example": "This is a comment" },
                      "issueId": { "type": "string", "example": "issue_id_123" },
                      "userId": { "type": "string", "example": "user_id_123" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "comment1",
                    "content": "This is a comment",
                    "issueId": "issue_id_123",
                    "userId": "user_id_123"
                  },
                  {
                    "id": "comment2",
                    "content": "Another comment",
                    "issueId": "issue_id_123",
                    "userId": "user_id_456"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "comments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/attachments/presign": {
      "post": {
        "operationId": "AttachmentsController_presign",
        "summary": "Get presigned URL for upload",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PresignDto"
              },
              "example": {
                "issueId": "issue_id_123",
                "filename": "image.png",
                "contentType": "image/png",
                "size": 1024
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Presigned URL generated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": { "type": "string", "example": "https://s3.amazonaws.com/bucket/uploads/image.png" },
                    "fields": { "type": "object", "example": {} }
                  }
                },
                "example": {
                  "url": "https://s3.amazonaws.com/bucket/uploads/image.png",
                  "fields": {}
                }
              }
            }
          }
        },
        "tags": [
          "attachments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/attachments/confirm": {
      "post": {
        "operationId": "AttachmentsController_confirm",
        "summary": "Confirm upload and create DB record",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfirmDto"
              },
              "example": {
                "issueId": "issue_id_123",
                "objectKey": "uploads/image.png",
                "url": "https://s3.amazonaws.com/bucket/uploads/image.png"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Attachment created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "string", "example": "attachment1" },
                    "url": { "type": "string", "example": "https://s3.amazonaws.com/bucket/uploads/image.png" },
                    "issueId": { "type": "string", "example": "issue_id_123" }
                  }
                },
                "example": {
                  "id": "attachment1",
                  "url": "https://s3.amazonaws.com/bucket/uploads/image.png",
                  "issueId": "issue_id_123"
                }
              }
            }
          }
        },
        "tags": [
          "attachments"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/users": {
      "get": {
        "operationId": "AdminController_getUsers",
        "summary": "Get all users with filters",
        "parameters": [
          {
            "name": "email",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "user1" },
                      "email": { "type": "string", "example": "user1@example.com" },
                      "name": { "type": "string", "example": "User One" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "user1",
                    "email": "user1@example.com",
                    "name": "User One"
                  },
                  {
                    "id": "user2",
                    "email": "user2@example.com",
                    "name": "User Two"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/impersonate": {
      "post": {
        "operationId": "AdminController_impersonate",
        "summary": "Impersonate a user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImpersonateDto"
              },
              "example": {
                "userId": "user_id_123"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Impersonation token issued",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." },
                    "expiresIn": { "type": "number", "example": 900 }
                  }
                },
                "example": {
                  "accessToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "expiresIn": 900
                }
              }
            }
          }
        },
        "tags": [
          "admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/admin/audit-logs": {
      "get": {
        "operationId": "AdminController_getAuditLogs",
        "summary": "Get audit logs with filters",
        "parameters": [
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of audit logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": { "type": "string", "example": "log1" },
                      "action": { "type": "string", "example": "login" },
                      "userId": { "type": "string", "example": "user1" },
                      "timestamp": { "type": "string", "format": "date-time", "example": "2023-10-01T12:00:00Z" }
                    }
                  }
                },
                "example": [
                  {
                    "id": "log1",
                    "action": "login",
                    "userId": "user1",
                    "timestamp": "2023-10-01T12:00:00Z"
                  },
                  {
                    "id": "log2",
                    "action": "create_project",
                    "userId": "user2",
                    "timestamp": "2023-10-02T14:30:00Z"
                  }
                ]
              }
            }
          }
        },
        "tags": [
          "admin"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "auth",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "JWT",
        "description": "Enter JWT token",
        "in": "header"
      },
      "cookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "refresh_token"
      }
    },
    "schemas": {
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "example": "admin123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          },
          "expiresIn": {
            "type": "number",
            "example": 900
          }
        },
        "required": [
          "accessToken",
          "expiresIn"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "password": {
            "type": "string",
            "example": "newpassword123"
          }
        }
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "admin"
          },
          "description": {
            "type": "string",
            "example": "Administrator role"
          }
        },
        "required": ["name"]
      },
      "UpdateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "admin"
          },
          "description": {
            "type": "string",
            "example": "Administrator role"
          }
        }
      },
      "AssignRoleDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user_id_123"
          }
        },
        "required": ["userId"]
      },
      "CreatePermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "read"
          },
          "description": {
            "type": "string",
            "example": "Read access"
          }
        },
        "required": ["name"]
      },
      "UpdatePermissionDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "read"
          },
          "description": {
            "type": "string",
            "example": "Read access"
          }
        }
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My Project"
          },
          "description": {
            "type": "string",
            "example": "A sample project"
          },
          "organizationId": {
            "type": "string",
            "example": "org_id_123"
          }
        },
        "required": ["name", "organizationId"]
      },
      "UpdateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Project"
          },
          "description": {
            "type": "string",
            "example": "Updated description"
          }
        }
      },
      "AddMemberDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user_id_123"
          }
        },
        "required": ["userId"]
      },
      "CreateBoardDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My Board"
          },
          "projectId": {
            "type": "string",
            "example": "project_id_123"
          }
        },
        "required": ["name", "projectId"]
      },
      "UpdateBoardDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Updated Board"
          }
        }
      },
      "CreateListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "To Do"
          },
          "boardId": {
            "type": "string",
            "example": "board_id_123"
          }
        },
        "required": ["name", "boardId"]
      },
      "UpdateListDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "In Progress"
          }
        }
      },
      "CreateIssueDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Fix bug"
          },
          "description": {
            "type": "string",
            "example": "Description of the issue"
          },
          "assigneeId": {
            "type": "string",
            "example": "user_id_123"
          },
          "listId": {
            "type": "string",
            "example": "list_id_123"
          }
        },
        "required": ["title", "listId"]
      },
      "UpdateIssueDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Updated title"
          },
          "description": {
            "type": "string",
            "example": "Updated description"
          },
          "assigneeId": {
            "type": "string",
            "example": "user_id_456"
          }
        }
      },
      "CreateCommentDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "This is a comment"
          }
        },
        "required": ["content"]
      },
      "PresignDto": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "string",
            "example": "issue_id_123"
          },
          "filename": {
            "type": "string",
            "example": "image.png"
          },
          "contentType": {
            "type": "string",
            "example": "image/png"
          },
          "size": {
            "type": "integer",
            "example": 1024
          }
        },
        "required": ["issueId", "filename", "contentType", "size"]
      },
      "ConfirmDto": {
        "type": "object",
        "properties": {
          "issueId": {
            "type": "string",
            "example": "issue_id_123"
          },
          "objectKey": {
            "type": "string",
            "example": "uploads/image.png"
          },
          "url": {
            "type": "string",
            "example": "https://s3.amazonaws.com/bucket/uploads/image.png"
          }
        },
        "required": ["issueId", "objectKey", "url"]
      },
      "ImpersonateDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "example": "user_id_123"
          }
        },
        "required": ["userId"]
      }
    }
  }
}